// Code generated by protoc-gen-go.
// source: manyone.proto
// DO NOT EDIT!

/*
Package manyone is a generated protocol buffer package.

It is generated from these files:
	manyone.proto

It has these top-level messages:
	Point
	Rect
*/
package manyone

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Point struct {
	A int32 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B int32 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Point) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Point) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type Rect struct {
	A *Point `protobuf:"bytes,1,opt,name=a" json:"a,omitempty"`
	B *Point `protobuf:"bytes,2,opt,name=b" json:"b,omitempty"`
}

func (m *Rect) Reset()                    { *m = Rect{} }
func (m *Rect) String() string            { return proto.CompactTextString(m) }
func (*Rect) ProtoMessage()               {}
func (*Rect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Rect) GetA() *Point {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *Rect) GetB() *Point {
	if m != nil {
		return m.B
	}
	return nil
}

func init() {
	proto.RegisterType((*Point)(nil), "manyone.Point")
	proto.RegisterType((*Rect)(nil), "manyone.Rect")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Manyone service

type ManyoneClient interface {
	MultiSendClient(ctx context.Context, opts ...grpc.CallOption) (Manyone_MultiSendClientClient, error)
}

type manyoneClient struct {
	cc *grpc.ClientConn
}

func NewManyoneClient(cc *grpc.ClientConn) ManyoneClient {
	return &manyoneClient{cc}
}

func (c *manyoneClient) MultiSendClient(ctx context.Context, opts ...grpc.CallOption) (Manyone_MultiSendClientClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Manyone_serviceDesc.Streams[0], c.cc, "/manyone.manyone/MultiSendClient", opts...)
	if err != nil {
		return nil, err
	}
	x := &manyoneMultiSendClientClient{stream}
	return x, nil
}

type Manyone_MultiSendClientClient interface {
	Send(*Point) error
	CloseAndRecv() (*Rect, error)
	grpc.ClientStream
}

type manyoneMultiSendClientClient struct {
	grpc.ClientStream
}

func (x *manyoneMultiSendClientClient) Send(m *Point) error {
	return x.ClientStream.SendMsg(m)
}

func (x *manyoneMultiSendClientClient) CloseAndRecv() (*Rect, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Rect)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Manyone service

type ManyoneServer interface {
	MultiSendClient(Manyone_MultiSendClientServer) error
}

func RegisterManyoneServer(s *grpc.Server, srv ManyoneServer) {
	s.RegisterService(&_Manyone_serviceDesc, srv)
}

func _Manyone_MultiSendClient_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ManyoneServer).MultiSendClient(&manyoneMultiSendClientServer{stream})
}

type Manyone_MultiSendClientServer interface {
	SendAndClose(*Rect) error
	Recv() (*Point, error)
	grpc.ServerStream
}

type manyoneMultiSendClientServer struct {
	grpc.ServerStream
}

func (x *manyoneMultiSendClientServer) SendAndClose(m *Rect) error {
	return x.ServerStream.SendMsg(m)
}

func (x *manyoneMultiSendClientServer) Recv() (*Point, error) {
	m := new(Point)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Manyone_serviceDesc = grpc.ServiceDesc{
	ServiceName: "manyone.manyone",
	HandlerType: (*ManyoneServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MultiSendClient",
			Handler:       _Manyone_MultiSendClient_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "manyone.proto",
}

func init() { proto.RegisterFile("manyone.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0xcc, 0xab,
	0xcc, 0xcf, 0x4b, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x94, 0xb9,
	0x58, 0x03, 0xf2, 0x33, 0xf3, 0x4a, 0x84, 0x78, 0xb8, 0x18, 0x13, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x58, 0x83, 0x18, 0x13, 0x41, 0xbc, 0x24, 0x09, 0x26, 0x08, 0x2f, 0x49, 0xc9, 0x89, 0x8b, 0x25,
	0x28, 0x35, 0xb9, 0x44, 0x48, 0x06, 0xa6, 0x86, 0xdb, 0x88, 0x4f, 0x0f, 0x66, 0x20, 0x58, 0x3b,
	0x48, 0x8f, 0x0c, 0x4c, 0x0f, 0x16, 0xd9, 0x24, 0x23, 0x7b, 0x2e, 0x98, 0x9d, 0x42, 0x26, 0x5c,
	0xfc, 0xbe, 0xa5, 0x39, 0x25, 0x99, 0xc1, 0xa9, 0x79, 0x29, 0xce, 0x39, 0x99, 0xa9, 0x79, 0x25,
	0x42, 0x68, 0x1a, 0xa4, 0x78, 0xe1, 0x7c, 0x90, 0xc5, 0x4a, 0x0c, 0x1a, 0x8c, 0x4e, 0xaa, 0x5c,
	0x12, 0x99, 0xf9, 0x7a, 0xe9, 0x45, 0x05, 0xc9, 0x7a, 0xa9, 0x15, 0x89, 0xb9, 0x05, 0x39, 0xa9,
	0xc5, 0x30, 0x45, 0x4e, 0x30, 0xa3, 0x03, 0x18, 0x93, 0xd8, 0xc0, 0x1e, 0x34, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x54, 0x11, 0xf6, 0x0e, 0xf1, 0x00, 0x00, 0x00,
}
