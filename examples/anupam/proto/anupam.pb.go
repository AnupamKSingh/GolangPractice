// Code generated by protoc-gen-go.
// source: anupam.proto
// DO NOT EDIT!

/*
Package anupam is a generated protocol buffer package.

It is generated from these files:
	anupam.proto

It has these top-level messages:
	Point1
	Point2
	Rect
	RectStr
*/
package anupam

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Point1 struct {
	A int32 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B int32 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *Point1) Reset()                    { *m = Point1{} }
func (m *Point1) String() string            { return proto.CompactTextString(m) }
func (*Point1) ProtoMessage()               {}
func (*Point1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Point1) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Point1) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type Point2 struct {
	A int32 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B int32 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *Point2) Reset()                    { *m = Point2{} }
func (m *Point2) String() string            { return proto.CompactTextString(m) }
func (*Point2) ProtoMessage()               {}
func (*Point2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Point2) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Point2) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type Rect struct {
	A *Point1 `protobuf:"bytes,1,opt,name=a" json:"a,omitempty"`
	B *Point1 `protobuf:"bytes,2,opt,name=b" json:"b,omitempty"`
}

func (m *Rect) Reset()                    { *m = Rect{} }
func (m *Rect) String() string            { return proto.CompactTextString(m) }
func (*Rect) ProtoMessage()               {}
func (*Rect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Rect) GetA() *Point1 {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *Rect) GetB() *Point1 {
	if m != nil {
		return m.B
	}
	return nil
}

type RectStr struct {
	A *Point2 `protobuf:"bytes,1,opt,name=a" json:"a,omitempty"`
	B *Point2 `protobuf:"bytes,2,opt,name=b" json:"b,omitempty"`
}

func (m *RectStr) Reset()                    { *m = RectStr{} }
func (m *RectStr) String() string            { return proto.CompactTextString(m) }
func (*RectStr) ProtoMessage()               {}
func (*RectStr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RectStr) GetA() *Point2 {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *RectStr) GetB() *Point2 {
	if m != nil {
		return m.B
	}
	return nil
}

func init() {
	proto.RegisterType((*Point1)(nil), "anupam.Point1")
	proto.RegisterType((*Point2)(nil), "anupam.Point2")
	proto.RegisterType((*Rect)(nil), "anupam.Rect")
	proto.RegisterType((*RectStr)(nil), "anupam.RectStr")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Anupam service

type AnupamClient interface {
	GetFeature(ctx context.Context, in *Point1, opts ...grpc.CallOption) (*Rect, error)
	SetFeature(ctx context.Context, in *Point2, opts ...grpc.CallOption) (Anupam_SetFeatureClient, error)
}

type anupamClient struct {
	cc *grpc.ClientConn
}

func NewAnupamClient(cc *grpc.ClientConn) AnupamClient {
	return &anupamClient{cc}
}

func (c *anupamClient) GetFeature(ctx context.Context, in *Point1, opts ...grpc.CallOption) (*Rect, error) {
	out := new(Rect)
	err := grpc.Invoke(ctx, "/anupam.anupam/GetFeature", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anupamClient) SetFeature(ctx context.Context, in *Point2, opts ...grpc.CallOption) (Anupam_SetFeatureClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Anupam_serviceDesc.Streams[0], c.cc, "/anupam.anupam/SetFeature", opts...)
	if err != nil {
		return nil, err
	}
	x := &anupamSetFeatureClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Anupam_SetFeatureClient interface {
	Recv() (*RectStr, error)
	grpc.ClientStream
}

type anupamSetFeatureClient struct {
	grpc.ClientStream
}

func (x *anupamSetFeatureClient) Recv() (*RectStr, error) {
	m := new(RectStr)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Anupam service

type AnupamServer interface {
	GetFeature(context.Context, *Point1) (*Rect, error)
	SetFeature(*Point2, Anupam_SetFeatureServer) error
}

func RegisterAnupamServer(s *grpc.Server, srv AnupamServer) {
	s.RegisterService(&_Anupam_serviceDesc, srv)
}

func _Anupam_GetFeature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnupamServer).GetFeature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/anupam.anupam/GetFeature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnupamServer).GetFeature(ctx, req.(*Point1))
	}
	return interceptor(ctx, in, info, handler)
}

func _Anupam_SetFeature_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Point2)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AnupamServer).SetFeature(m, &anupamSetFeatureServer{stream})
}

type Anupam_SetFeatureServer interface {
	Send(*RectStr) error
	grpc.ServerStream
}

type anupamSetFeatureServer struct {
	grpc.ServerStream
}

func (x *anupamSetFeatureServer) Send(m *RectStr) error {
	return x.ServerStream.SendMsg(m)
}

var _Anupam_serviceDesc = grpc.ServiceDesc{
	ServiceName: "anupam.anupam",
	HandlerType: (*AnupamServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeature",
			Handler:    _Anupam_GetFeature_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SetFeature",
			Handler:       _Anupam_SetFeature_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "anupam.proto",
}

func init() { proto.RegisterFile("anupam.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xcc, 0x2b, 0x2d,
	0x48, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x54, 0xb8, 0xd8,
	0x02, 0xf2, 0x33, 0xf3, 0x4a, 0x0c, 0x85, 0x78, 0xb8, 0x18, 0x13, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x58, 0x83, 0x18, 0x13, 0x41, 0xbc, 0x24, 0x09, 0x26, 0x08, 0x2f, 0x09, 0xae, 0xca, 0x08, 0xaf,
	0x2a, 0x27, 0x2e, 0x96, 0xa0, 0xd4, 0xe4, 0x12, 0x21, 0x19, 0x98, 0x1a, 0x6e, 0x23, 0x3e, 0x3d,
	0xa8, 0xad, 0x10, 0x4b, 0x40, 0x7a, 0x64, 0x60, 0x7a, 0xb0, 0xc8, 0x26, 0x29, 0xb9, 0x72, 0xb1,
	0x83, 0xcc, 0x08, 0x2e, 0x29, 0xc2, 0x6d, 0x8c, 0x11, 0x5e, 0x63, 0x8c, 0x82, 0x18, 0x93, 0x8c,
	0x32, 0xb9, 0xa0, 0x1e, 0x14, 0xd2, 0xe1, 0xe2, 0x72, 0x4f, 0x2d, 0x71, 0x4b, 0x4d, 0x2c, 0x29,
	0x2d, 0x4a, 0x15, 0x42, 0xb3, 0x51, 0x8a, 0x07, 0xc6, 0x07, 0x59, 0xaa, 0xc4, 0x20, 0x64, 0xc8,
	0xc5, 0x15, 0x8c, 0x4b, 0xb5, 0x91, 0x14, 0x3f, 0xb2, 0xea, 0xe0, 0x92, 0x22, 0x25, 0x06, 0x03,
	0x46, 0x27, 0x65, 0x2e, 0xf1, 0xcc, 0x7c, 0xbd, 0xf4, 0xa2, 0x82, 0x64, 0xbd, 0xd4, 0x8a, 0xc4,
	0xdc, 0x82, 0x9c, 0xd4, 0x62, 0xa8, 0x32, 0x27, 0xa8, 0x1b, 0x02, 0x18, 0x93, 0xd8, 0xc0, 0xa1,
	0x6e, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x17, 0x60, 0x8d, 0x85, 0x01, 0x00, 0x00,
}
